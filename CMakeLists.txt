
cmake_minimum_required(VERSION 3.20)

project(mcfft)
set(CMAKE_C_STANDARD 11)

include_directories(${CMAKE_SOURCE_DIR})
include(CTest)
include(CheckCCompilerFlag)

if(MSVC)
    check_c_compiler_flag("/arch:AVX2" COMPILER_SUPPORTS_AVX)
else()
    check_c_compiler_flag("-mavx2" COMPILER_SUPPORTS_AVX)
endif()
if (CMAKE_SYSTEM_PROCESSOR MATCHES "^(aarch64|arm64)")
    set(COMPILER_SUPPORTS_NEON TRUE)
endif()

if(COMPILER_SUPPORTS_AVX)
    set(USE_AVX ON)
elseif(COMPILER_SUPPORTS_NEON)
    set(USE_NEON ON)
endif()

option(FORCE_EXCLUDE_MALLOC "Force to exclude malloc (isn't applied for benchmarks)" OFF)
option(FORCE_NEON "Force NEON build" OFF)
option(FORCE_AVX "Force AVX build" OFF)
option(BUILD_UT "Force UTs build" OFF)
option(BUILD_BENCHMARKS "Force benchmarks build (Linux support only)" OFF)
if (BUILD_BENCHMARKS)
    if(WIN32)
        message(FATAL_ERROR "Benchmarks are not supported on Windows")
    endif()
    set(BUILD_UT ON)
endif()

if(FORCE_NEON)
    set(USE_NEON ON)
    set(USE_AVX OFF)
elseif(FORCE_AVX)
    set(USE_AVX ON)
    set(USE_NEON OFF)
endif()

if(USE_NEON)
    message(STATUS "Compiling with NEON support")
    if(NOT MSVC)
        add_compile_options(-march=armv8-a+simd)
    endif()
endif()

if(USE_AVX)
    message(STATUS "Compiling with AVX support")
    if(MSVC)
        add_compile_options(/arch:AVX2)
    else()
        add_compile_options(-march=haswell -mfma -mavx2)
    endif()
endif()

add_library(${PROJECT_NAME})
add_subdirectory(src)
if(BUILD_UT)
    add_subdirectory(ut)
endif()

if(FORCE_EXCLUDE_MALLOC)
    if(BUILD_BENCHMARKS)
        message(FATAL_ERROR "Malloc is required for benchmarks")
        endif()
        target_compile_definitions(${PROJECT_NAME} PRIVATE MC_EXCLUDE_MALLOC)
endif()

if(NOT MSVC)
    target_link_libraries(${PROJECT_NAME} m)
endif()

